import { Ionicons } from '@expo/vector-icons'
import { useRouter } from 'expo-router'
import React, { useEffect, useState } from 'react'
import { Dimensions } from 'react-native'
import { useDispatch, useSelector } from 'react-redux'
import {
    Button,
    Card,
    Input,
    Paragraph,
    ScrollView,
    Spinner,
    Text,
    XStack,
    YStack
} from 'tamagui'
import AIChatModal from '../../components/AIChatModal'
import MapWidget from '../../components/MapWidget'
import MedicineCard from '../../components/MedicineCard'
import { setCountry } from '../../redux/medicinesSlice'
import { RootState } from '../../redux/store'

const countries = [
    { code: 'RU', name: '–†–æ—Å—Å–∏—è' },
    { code: 'US', name: '–°–®–ê' },
    { code: 'IL', name: '–ò–∑—Ä–∞–∏–ª—å' },
]

// –ì–æ—Ä–æ–¥–∞ –¥–ª—è –∫–∞—Ä—Ç
const cities = [
    { code: 'moscow', name: '–ú–æ—Å–∫–≤–∞', country: 'RU', icon: 'üèõÔ∏è' },
    { code: 'boston', name: '–ë–æ—Å—Ç–æ–Ω', country: 'US', icon: 'üèôÔ∏è' },
    { code: 'tel-aviv', name: '–¢–µ–ª—å-–ê–≤–∏–≤', country: 'IL', icon: 'üèñÔ∏è' },
]

const medicalFilters = [
    { id: 'age', label: '–í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞', icon: 'people-outline' },
    { id: 'pregnancy', label: '–ë–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å/–ª–∞–∫—Ç–∞—Ü–∏—è', icon: 'heart-outline' },
    { id: 'interactions', label: '–õ–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è', icon: 'warning-outline' },
    { id: 'contraindications', label: '–ü—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è', icon: 'close-circle-outline' },
    { id: 'dosage', label: '–§–æ—Ä–º–∞ –≤—ã–ø—É—Å–∫–∞', icon: 'medical-outline' },
]

const professionalSearchOptions = [
    { id: 'inn', label: '–ú–ù–ù (–∞–∫—Ç–∏–≤–Ω–æ–µ –≤–µ—â–µ—Å—Ç–≤–æ)', placeholder: '–ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª, –ò–±—É–ø—Ä–æ—Ñ–µ–Ω...' },
    { id: 'indication', label: '–ü–æ–∫–∞–∑–∞–Ω–∏—è –∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—é', placeholder: '–ì–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å, –ª–∏—Ö–æ—Ä–∞–¥–∫–∞...' },
    { id: 'atc', label: '–ê–¢–• –∫–æ–¥', placeholder: 'N02BE01, M01AE01...' },
]

// –ù–æ–≤—ã–µ —Ñ–∏—á–∏ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
const quickFilters = [
    { id: 'price', label: '–î–æ 100‚ÇΩ', icon: 'card-outline' },
    { id: 'rating', label: '–†–µ–π—Ç–∏–Ω–≥ 4+', icon: 'star-outline' },
    { id: 'available', label: '–í –Ω–∞–ª–∏—á–∏–∏', icon: 'checkmark-circle-outline' },
    { id: 'prescription', label: '–ë–µ–∑ —Ä–µ—Ü–µ–ø—Ç–∞', icon: 'document-outline' },
]

const popularTags = [
    '–ü–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª', '–ò–±—É–ø—Ä–æ—Ñ–µ–Ω', '–ê—Å–ø–∏—Ä–∏–Ω', '–¶–∏—Ç—Ä–∞–º–æ–Ω', '–ù—É—Ä–æ—Ñ–µ–Ω', '–ê–Ω–∞–ª—å–≥–∏–Ω'
]

const sortOptions = [
    { id: 'relevance', label: '–ü–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏' },
    { id: 'price_asc', label: '–¶–µ–Ω–∞: –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é' },
    { id: 'price_desc', label: '–¶–µ–Ω–∞: –ø–æ —É–±—ã–≤–∞–Ω–∏—é' },
    { id: 'rating', label: '–ü–æ —Ä–µ–π—Ç–∏–Ω–≥—É' },
    { id: 'name', label: '–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é' },
]

export default function SearchPage() {
    const query = useSelector((state: RootState) =>
        state.medicines.query.toLowerCase()
    )
    const selectedCountry = useSelector((state: RootState) => state.medicines.country)
    const items = useSelector((state: RootState) => state.medicines.items)
    const dispatch = useDispatch()
    const { width: screenWidth } = Dimensions.get('window')
    const isMobile = screenWidth < 768
    const router = useRouter()

    const [searchMode, setSearchMode] = useState<'basic' | 'pro'>('basic')
    const [selectedCity, setSelectedCity] = useState('moscow') // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ú–æ—Å–∫–≤–∞
    const [proSearchData, setProSearchData] = useState({
        inn: '',
        indication: '',
        atc: '',
        selectedFilters: [] as string[],
    })

    // –ù–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    const [basicFilters, setBasicFilters] = useState<string[]>([])
    const [sortBy, setSortBy] = useState('relevance')
    const [showFilters, setShowFilters] = useState(false)
    const [showMap, setShowMap] = useState(false)

    // –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ–¥ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω—ã
    const getCityForCountry = (countryCode: string) => {
        const city = cities.find(c => c.country === countryCode)
        return city ? city.code : 'moscow'
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –≥–æ—Ä–æ–¥ –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç—Ä–∞–Ω—ã
    useEffect(() => {
        setSelectedCity(getCityForCountry(selectedCountry))
    }, [selectedCountry])

    const filtered = items.filter(
        (m) =>
            m.name.toLowerCase().includes(query) &&
            (!m.country || m.country === selectedCountry)
    )

    const [aiTip, setAiTip] = useState<string | null>(null)
    const [loadingTip, setLoadingTip] = useState(false)
    const [isChatVisible, setIsChatVisible] = useState(false)

    useEffect(() => {
        if (filtered.length > 0) {
            setLoadingTip(true)
            setTimeout(() => {
                const tip = searchMode === 'pro' 
                    ? `–ù–∞–π–¥–µ–Ω–æ ${filtered.length} –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∏ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è`
                    : `–ù–∞–π–¥–µ–Ω–æ ${filtered.length} –∞–Ω–∞–ª–æ–≥–æ–≤ –≤ —Å—Ç—Ä–∞–Ω–µ ${selectedCountry}`
                setAiTip(tip)
                setLoadingTip(false)
            }, 700)
        } else {
            setAiTip(null)
        }
    }, [query, selectedCountry, searchMode])

    const toggleFilter = (filterId: string, isBasic = false) => {
        if (isBasic) {
            setBasicFilters(prev =>
                prev.includes(filterId)
                    ? prev.filter(id => id !== filterId)
                    : [...prev, filterId]
            )
        } else {
            setProSearchData(prev => ({
                ...prev,
                selectedFilters: prev.selectedFilters.includes(filterId)
                    ? prev.selectedFilters.filter(id => id !== filterId)
                    : [...prev.selectedFilters, filterId]
            }))
        }
    }

    const renderBasicSearch = () => (
        <YStack space="$4">
            {/* üü¶ Header - –ö—Ä–∞—Å–∏–≤–∞—è —à–∞–ø–∫–∞ */}
            <Card
                backgroundColor="#fff"
                borderRadius="$6"
                padding={isMobile ? "$4" : "$5"}
                bordered
                borderColor="rgba(0, 122, 255, 0.3)"
                shadowColor="$shadowColor"
                shadowRadius={12}
                shadowOpacity={0.15}
            >
                <YStack space="$4">
                    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–∫–æ–Ω–∫–æ–π */}
                    <XStack alignItems="center" space="$3">
                        <YStack
                            width={isMobile ? 60 : 80}
                            height={isMobile ? 60 : 80}
                            backgroundColor="rgba(0, 122, 255, 0.1)"
                            borderRadius="$6"
                            justifyContent="center"
                            alignItems="center"
                        >
                            <Ionicons name="search" size={isMobile ? 28 : 36} color="#007AFF" />
                        </YStack>
                        <YStack flex={1}>
                            <Text 
                                fontSize={isMobile ? "$6" : "$7"} 
                                fontWeight="900" 
                                color="#1C1C1E"
                            >
                                –ü–æ–∏—Å–∫ –∞–Ω–∞–ª–æ–≥–æ–≤ –ª–µ–∫–∞—Ä—Å—Ç–≤
                            </Text>
                            <Text 
                                fontSize={isMobile ? "$3" : "$4"} 
                                color="#6B7280"
                                mt="$1"
                            >
                                –°—Ä–∞–≤–Ω–∏–≤–∞–π—Ç–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∞–º–∏ –∏ —ç–∫–æ–Ω–æ–º—å—Ç–µ –Ω–∞ –ø–æ–∫—É–ø–∫–∞—Ö
                            </Text>
                        </YStack>
                    </XStack>

                    {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
                    <XStack space={isMobile ? "$3" : "$4"} justifyContent="space-around">
                        <YStack alignItems="center">
                            <Text fontSize={isMobile ? "$5" : "$6"} fontWeight="900" color="#007AFF">
                                50,000+
                            </Text>
                            <Text fontSize={isMobile ? "$1" : "$2"} color="#6B7280" textAlign="center">
                                {isMobile ? "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" : "–î–æ–≤–æ–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"}
                            </Text>
                        </YStack>
                        <YStack alignItems="center">
                            <Text fontSize={isMobile ? "$5" : "$6"} fontWeight="900" color="#34C759">
                                2,450‚ÇΩ
                            </Text>
                            <Text fontSize={isMobile ? "$1" : "$2"} color="#6B7280" textAlign="center">
                                {isMobile ? "–≠–∫–æ–Ω–æ–º–∏—è" : "–°—Ä–µ–¥–Ω—è—è —ç–∫–æ–Ω–æ–º–∏—è"}
                            </Text>
                        </YStack>
                        <YStack alignItems="center">
                            <Text fontSize={isMobile ? "$5" : "$6"} fontWeight="900" color="#FF9500">
                                3 —Å—Ç—Ä–∞–Ω—ã
                            </Text>
                            <Text fontSize={isMobile ? "$1" : "$2"} color="#6B7280" textAlign="center">
                                {isMobile ? "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ" : "–î–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ü–µ–Ω"}
                            </Text>
                        </YStack>
                    </XStack>

                    {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
                    <YStack space="$2">
                        <Text fontSize={isMobile ? "$3" : "$4"} fontWeight="600" color="#1C1C1E">
                            –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:
                        </Text>
                        <XStack flexWrap="wrap" space="$2">
                            {[
                                '–ü–æ–∏—Å–∫ –∞–Ω–∞–ª–æ–≥–æ–≤', '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ü–µ–Ω', '–ò–ò –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç', 
                                '–û—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è'
                            ].map((feature, index) => (
                                <XStack key={index} alignItems="center" space="$1" mb="$1">
                                    <Ionicons name="checkmark-circle" size={isMobile ? 14 : 16} color="#34C759" />
                                    <Text fontSize={isMobile ? "$2" : "$3"} color="#6B7280">
                                        {feature}
                                    </Text>
                                </XStack>
                            ))}
                        </XStack>
                    </YStack>
                </YStack>
            </Card>

            {/* üè∑Ô∏è –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–≥–∏ */}
            <Card
                backgroundColor="#fff"
                borderRadius="$6"
                padding={isMobile ? "$3" : "$4"}
                bordered
                borderColor="$gray4"
            >
                <YStack space="$3">
                    <Text fontSize={isMobile ? "$4" : "$5"} fontWeight="700" color="#1C1C1E">
                        –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
                    </Text>
                    <XStack flexWrap="wrap" space="$2">
                        {popularTags.map((tag) => (
                            <Button
                                key={tag}
                                size={isMobile ? "$2" : "$3"}
                                backgroundColor="transparent"
                                borderWidth={1}
                                borderColor="$gray6"
                                borderRadius="$4"
                                mb="$2"
                                pressStyle={{ scale: 0.96 }}
                                onPress={() => {
                                    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–∏—Å–∫–∞ –ø–æ —Ç–µ–≥—É
                                }}
                            >
                                <Text fontSize={isMobile ? "$2" : "$3"} color="#6B7280" fontWeight="600">
                                    {tag}
                                </Text>
                            </Button>
                        ))}
                    </XStack>
                </YStack>
            </Card>

            {/* üéõÔ∏è –§–∏–ª—å—Ç—Ä—ã –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
            <XStack space="$2" alignItems="center" justifyContent="space-between">
                <Button
                    size={isMobile ? "$2" : "$3"}
                    backgroundColor={showFilters ? '#007AFF' : 'transparent'}
                    borderWidth={1}
                    borderColor={showFilters ? '#007AFF' : '$gray6'}
                    borderRadius="$4"
                    onPress={() => setShowFilters(!showFilters)}
                    pressStyle={{ scale: 0.96 }}
                >
                    <XStack alignItems="center" space="$1">
                        <Ionicons 
                            name="options-outline" 
                            size={isMobile ? 14 : 16} 
                            color={showFilters ? '#fff' : '#6B7280'} 
                        />
                        <Text 
                            fontSize={isMobile ? "$2" : "$3"} 
                            color={showFilters ? '#fff' : '#6B7280'}
                            fontWeight="600"
                        >
                            –§–∏–ª—å—Ç—Ä—ã
                        </Text>
                    </XStack>
                </Button>

                <Button
                    size={isMobile ? "$2" : "$3"}
                    backgroundColor="transparent"
                    borderWidth={1}
                    borderColor="$gray6"
                    borderRadius="$4"
                    pressStyle={{ scale: 0.96 }}
                >
                    <XStack alignItems="center" space="$1">
                        <Ionicons name="swap-vertical-outline" size={isMobile ? 14 : 16} color="#6B7280" />
                        <Text fontSize={isMobile ? "$2" : "$3"} color="#6B7280" fontWeight="600">
                            –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
                        </Text>
                    </XStack>
                </Button>
            </XStack>

            {/* üîß –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
            {showFilters && (
                <Card
                    backgroundColor="#fff"
                    borderRadius="$6"
                    padding={isMobile ? "$3" : "$4"}
                    bordered
                    borderColor="$gray4"
                >
                    <YStack space="$3">
                        <Text fontSize={isMobile ? "$4" : "$5"} fontWeight="700" color="#1C1C1E">
                            –ë—ã—Å—Ç—Ä—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
                        </Text>
                        <XStack flexWrap="wrap" space="$2">
                            {quickFilters.map((filter) => (
                                <Button
                                    key={filter.id}
                                    size={isMobile ? "$2" : "$3"}
                                    backgroundColor={basicFilters.includes(filter.id) ? '#007AFF' : 'transparent'}
                                    borderWidth={1}
                                    borderColor={basicFilters.includes(filter.id) ? '#007AFF' : '$gray6'}
                                    borderRadius="$4"
                                    onPress={() => toggleFilter(filter.id, true)}
                                    mb="$2"
                                    pressStyle={{ scale: 0.96 }}
                                >
                                    <XStack alignItems="center" space="$1">
                                        <Ionicons 
                                            name={filter.icon as any} 
                                            size={isMobile ? 12 : 14} 
                                            color={basicFilters.includes(filter.id) ? '#fff' : '#6B7280'} 
                                        />
                                        <Text 
                                            fontSize={isMobile ? "$2" : "$3"} 
                                            color={basicFilters.includes(filter.id) ? '#fff' : '#6B7280'}
                                            fontWeight="600"
                                        >
                                            {filter.label}
                                        </Text>
                                    </XStack>
                                </Button>
                            ))}
                        </XStack>
                    </YStack>
                </Card>
            )}

            {/* üåç –°–≤–∏—Ç—á–µ—Ä —Å—Ç—Ä–∞–Ω —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ */}
            <Card
                backgroundColor="#fff"
                borderRadius="$6"
                padding={isMobile ? "$3" : "$4"}
                bordered
                borderColor="$gray4"
                shadowColor="$shadowColor"
                shadowRadius={8}
                shadowOpacity={0.1}
            >
                <YStack space="$4">
                    <YStack space="$2">
                        <Text fontSize={isMobile ? "$4" : "$5"} fontWeight="700" color="#1C1C1E">
                            –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
                        </Text>
                        <Text fontSize={isMobile ? "$3" : "$4"} color="$gray10">
                            –ù–∞–π–¥–µ–Ω–æ {filtered.length} {filtered.length === 1 ? '–ª–µ–∫–∞—Ä—Å—Ç–≤–æ' : filtered.length < 5 ? '–ª–µ–∫–∞—Ä—Å—Ç–≤–∞' : '–ª–µ–∫–∞—Ä—Å—Ç–≤'} –ø–æ –∑–∞–ø—Ä–æ—Å—É "{query}"
                        </Text>
                    </YStack>
                    
                    <XStack space="$2" justifyContent="space-between">
                        {countries.map((country) => {
                            const countryCount = items.filter(
                                m => m.name.toLowerCase().includes(query) && m.country === country.code
                            ).length;
                            
                            const isSelected = selectedCountry === country.code;
                            
                            return (
                                <Button
                                    key={country.code}
                                    size={isMobile ? "$2" : "$3"}
                                    backgroundColor={isSelected ? '#007AFF' : 'transparent'}
                                    borderWidth={2}
                                    borderColor={isSelected ? '#007AFF' : '#E5E7EB'}
                                    borderRadius="$4"
                                    onPress={() => dispatch(setCountry(country.code))}
                                    pressStyle={{ scale: 0.96 }}
                                    flex={1}
                                >
                                    <XStack alignItems="center" justifyContent="space-between" width="100%">
                                        <Text 
                                            fontSize={isMobile ? "$3" : "$4"}
                                            color={isSelected ? '#fff' : '#1C1C1E'}
                                            fontWeight="600"
                                        >
                                            {country.name}
                                        </Text>
                                        
                                        <XStack 
                                            backgroundColor={isSelected ? "rgba(255,255,255,0.2)" : "rgba(0,122,255,0.1)"}
                                            borderRadius="$2"
                                            px="$1.5"
                                            py="$0.5"
                                            alignItems="center"
                                            space="$1"
                                        >
                                            <Ionicons 
                                                name="checkmark-circle" 
                                                size={isMobile ? 12 : 14} 
                                                color={isSelected ? '#fff' : '#007AFF'} 
                                            />
                                            <Text 
                                                fontSize={isMobile ? "$1" : "$2"}
                                                color={isSelected ? '#fff' : '#007AFF'}
                                                fontWeight="600"
                                            >
                                                {countryCount}
                                            </Text>
                                        </XStack>
                                    </XStack>
                                </Button>
                            );
                        })}
                    </XStack>
                    
                    <XStack alignItems="center" space="$2" backgroundColor="rgba(0,122,255,0.05)" borderRadius="$4" padding="$3">
                        <Ionicons name="information-circle" size={isMobile ? 16 : 18} color="#007AFF" />
                        <Text fontSize={isMobile ? "$2" : "$3"} color="#007AFF" flex={1}>
                            –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–Ω–∞–ª–æ–≥–æ–≤ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ü–µ–Ω
                        </Text>
                    </XStack>
                </YStack>
            </Card>

            {/* üó∫Ô∏è –ö–∞—Ä—Ç–∞ –∞–ø—Ç–µ–∫ */}
            <Card
                backgroundColor="#fff"
                borderRadius="$6"
                padding={isMobile ? "$2" : "$4"}
                bordered
                borderColor="$gray4"
                shadowColor="$shadowColor"
                shadowRadius={8}
                shadowOpacity={0.1}
            >
                <YStack space="$2">
                    <XStack alignItems="center" justifyContent="space-between">
                        <XStack alignItems="center" space="$3">
                            <YStack
                                width={isMobile ? 40 : 48}
                                height={isMobile ? 40 : 48}
                                backgroundColor="rgba(0, 122, 255, 0.1)"
                                borderRadius="$4"
                                justifyContent="center"
                                alignItems="center"
                            >
                                <Ionicons name="location" size={isMobile ? 20 : 24} color="#007AFF" />
                            </YStack>
                            <YStack>
                                <XStack alignItems="center" space="$2">
                                    <Text fontSize={isMobile ? "$4" : "$5"} fontWeight="700" color="#1C1C1E">
                                        –ù–∞–ª–∏—á–∏–µ –≤ –∞–ø—Ç–µ–∫–∞—Ö
                                    </Text>
                                    <Text fontSize={isMobile ? "$3" : "$4"} color="#007AFF" fontWeight="700">
                                        {cities.find(c => c.code === selectedCity)?.name}
                                    </Text>
                                </XStack>
                            </YStack>
                        </XStack>
                        <Button
                            size={isMobile ? "$2" : "$3"}
                            backgroundColor="transparent"
                            borderWidth={1}
                            borderColor="$gray4"
                            borderRadius="$3"
                            onPress={() => setShowMap(!showMap)}
                            pressStyle={{ scale: 0.96 }}
                        >
                            <Ionicons 
                                name={showMap ? "chevron-up" : "chevron-down"} 
                                size={isMobile ? 16 : 18} 
                                color="#6B7280" 
                            />
                        </Button>
                    </XStack>
                    {showMap && (
                        <MapWidget city={selectedCity as 'moscow' | 'boston' | 'tel-aviv'} rect />
                    )}
                </YStack>
            </Card>

            {/* ü§ñ –ò–ò –ø–æ–º–æ—â–Ω–∏–∫ */}
            <Card
                backgroundColor="rgba(0, 122, 255, 0.05)"
                borderRadius="$6"
                padding={isMobile ? "$3" : "$4"}
                borderWidth={1}
                borderColor="rgba(0, 122, 255, 0.2)"
            >
                <YStack space="$3">
                    <XStack alignItems="center" space="$3">
                        <YStack
                            width={isMobile ? 40 : 48}
                            height={isMobile ? 40 : 48}
                            backgroundColor="rgba(0, 122, 255, 0.2)"
                            borderRadius="$4"
                            justifyContent="center"
                            alignItems="center"
                        >
                            <Ionicons name="chatbubble" size={isMobile ? 20 : 24} color="#007AFF" />
                        </YStack>
                        <YStack flex={1}>
                            <Text fontSize={isMobile ? "$4" : "$5"} fontWeight="700" color="#007AFF">
                                –ò–ò –ü–æ–º–æ—â–Ω–∏–∫ –ø–æ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞–º
                            </Text>
                            <Text fontSize={isMobile ? "$2" : "$3"} color="#1C1C1E">
                                –ü–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ –∞–Ω–∞–ª–æ–≥–∏, –æ–±—ä—è—Å–Ω–∏—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤ –∏ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –∑–¥–æ—Ä–æ–≤—å–µ
                            </Text>
                        </YStack>
                        <Button
                            size={isMobile ? "$3" : "$4"}
                            backgroundColor="#007AFF"
                            borderRadius="$4"
                            onPress={() => setIsChatVisible(true)}
                            pressStyle={{ scale: 0.96 }}
                        >
                            <Ionicons name="chatbubble-outline" size={isMobile ? 16 : 20} color="#fff" />
                        </Button>
                    </XStack>
                </YStack>
            </Card>
        </YStack>
    )

    const renderProSearch = () => (
        <YStack space="$4">
            {/* üë®‚Äç‚öïÔ∏è Pro Header - –ö—Ä–∞—Å–∏–≤–∞—è —à–∞–ø–∫–∞ */}
            <Card
                backgroundColor="#fff"
                borderRadius="$6"
                padding={isMobile ? "$4" : "$5"}
                bordered
                borderColor="rgba(255, 149, 0, 0.3)"
                shadowColor="$shadowColor"
                shadowRadius={12}
                shadowOpacity={0.15}
            >
                <YStack space="$4">
                    {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–∫–æ–Ω–∫–æ–π */}
                    <XStack alignItems="center" space="$3">
                        <YStack
                            width={isMobile ? 60 : 80}
                            height={isMobile ? 60 : 80}
                            backgroundColor="rgba(255, 149, 0, 0.1)"
                            borderRadius="$6"
                            justifyContent="center"
                            alignItems="center"
                        >
                            <Ionicons name="medical" size={isMobile ? 28 : 36} color="#FF9500" />
                        </YStack>
                        <YStack flex={1}>
                            <Text 
                                fontSize={isMobile ? "$6" : "$7"} 
                                fontWeight="900" 
                                color="#1C1C1E"
                            >
                                Pro –ø–æ–∏—Å–∫ –¥–ª—è –≤—Ä–∞—á–µ–π
                            </Text>
                            <Text 
                                fontSize={isMobile ? "$3" : "$4"} 
                                color="#6B7280"
                                mt="$1"
                            >
                                –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º
                            </Text>
                        </YStack>
                    </XStack>

                    {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Pro */}
                    <XStack space={isMobile ? "$3" : "$4"} justifyContent="space-around">
                        <YStack alignItems="center">
                            <Text fontSize={isMobile ? "$5" : "$6"} fontWeight="900" color="#FF9500">
                                15,000+
                            </Text>
                            <Text fontSize={isMobile ? "$1" : "$2"} color="#6B7280" textAlign="center">
                                –ü—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤ –≤ –±–∞–∑–µ
                            </Text>
                        </YStack>
                        <YStack alignItems="center">
                            <Text fontSize={isMobile ? "$5" : "$6"} fontWeight="900" color="#34C759">
                                98%
                            </Text>
                            <Text fontSize={isMobile ? "$1" : "$2"} color="#6B7280" textAlign="center">
                                –¢–æ—á–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
                            </Text>
                        </YStack>
                        <YStack alignItems="center">
                            <Text fontSize={isMobile ? "$5" : "$6"} fontWeight="900" color="#007AFF">
                                24/7
                            </Text>
                            <Text fontSize={isMobile ? "$1" : "$2"} color="#6B7280" textAlign="center">
                                –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ò–ò
                            </Text>
                        </YStack>
                    </XStack>

                    {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
                    <YStack space="$2">
                        <Text fontSize={isMobile ? "$3" : "$4"} fontWeight="600" color="#1C1C1E">
                            –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
                        </Text>
                        <XStack flexWrap="wrap" space="$2">
                            {[
                                '–ü–æ–∏—Å–∫ –ø–æ –ú–ù–ù', '–ê–¢–• –∫–æ–¥—ã', '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è', 
                                '–ü—Ä–æ—Ç–∏–≤–æ–ø–æ–∫–∞–∑–∞–Ω–∏—è', '–ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ'
                            ].map((feature, index) => (
                                <XStack key={index} alignItems="center" space="$1" mb="$1">
                                    <Ionicons name="checkmark-circle" size={isMobile ? 14 : 16} color="#34C759" />
                                    <Text fontSize={isMobile ? "$2" : "$3"} color="#6B7280">
                                        {feature}
                                    </Text>
                                </XStack>
                            ))}
                        </XStack>
                    </YStack>
                </YStack>
            </Card>

            {/* üî¨ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –ø–æ–∏—Å–∫–∞ */}
            <Card
                backgroundColor="#fff"
                borderRadius="$6"
                padding={isMobile ? "$3" : "$4"}
                bordered
                borderColor="$gray4"
                shadowColor="$shadowColor"
                shadowRadius={8}
                shadowOpacity={0.1}
            >
                <YStack space="$3">
                    <Text fontSize={isMobile ? "$4" : "$5"} fontWeight="700" color="#1C1C1E">
                        –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞
                    </Text>

                    {professionalSearchOptions.map((option) => (
                        <YStack key={option.id} space="$2">
                            <Text fontSize={isMobile ? "$3" : "$4"} fontWeight="600" color="#1C1C1E">
                                {option.label}
                            </Text>
                            <Input
                                placeholder={option.placeholder}
                                value={proSearchData[option.id as keyof typeof proSearchData] as string}
                                onChangeText={(text) => setProSearchData(prev => ({
                                    ...prev,
                                    [option.id]: text
                                }))}
                                fontSize={isMobile ? "$3" : "$4"}
                                borderColor="$gray6"
                                borderRadius="$3"
                                backgroundColor="#f8f9fa"
                            />
                        </YStack>
                    ))}
                </YStack>
            </Card>

            {/* üè• –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
            <Card
                backgroundColor="#fff"
                borderRadius="$6"
                padding={isMobile ? "$3" : "$4"}
                bordered
                borderColor="$gray4"
                shadowColor="$shadowColor"
                shadowRadius={8}
                shadowOpacity={0.1}
            >
                <YStack space="$3">
                    <Text fontSize={isMobile ? "$4" : "$5"} fontWeight="700" color="#1C1C1E">
                        –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
                    </Text>

                    <XStack flexWrap="wrap" space="$2">
                        {medicalFilters.map((filter) => (
                            <Button
                                key={filter.id}
                                size={isMobile ? "$2" : "$3"}
                                backgroundColor={proSearchData.selectedFilters.includes(filter.id) ? '#007AFF' : 'transparent'}
                                borderWidth={1}
                                borderColor={proSearchData.selectedFilters.includes(filter.id) ? '#007AFF' : '$gray6'}
                                borderRadius="$4"
                                onPress={() => toggleFilter(filter.id)}
                                mb="$2"
                                pressStyle={{ scale: 0.96 }}
                            >
                                <XStack alignItems="center" space="$1">
                                    <Ionicons 
                                        name={filter.icon as any} 
                                        size={isMobile ? 12 : 14} 
                                        color={proSearchData.selectedFilters.includes(filter.id) ? '#fff' : '#6B7280'} 
                                    />
                                    <Text 
                                        fontSize={isMobile ? "$2" : "$3"} 
                                        color={proSearchData.selectedFilters.includes(filter.id) ? '#fff' : '#6B7280'}
                                        fontWeight="600"
                                    >
                                        {filter.label}
                                    </Text>
                                </XStack>
                            </Button>
                        ))}
                    </XStack>
                </YStack>
            </Card>

            {/* üåç –†–µ–≥–∏–æ–Ω—ã –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ */}
            <Card
                backgroundColor="#fff"
                borderRadius="$6"
                padding={isMobile ? "$3" : "$4"}
                bordered
                borderColor="$gray4"
            >
                <YStack space="$3">
                    <Text fontSize={isMobile ? "$4" : "$5"} fontWeight="700" color="#1C1C1E">
                        –†–µ–≥–∏–æ–Ω—ã –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
                    </Text>
                    
                    <XStack space="$2" alignItems="center" flexWrap="wrap">
                        {countries.map((country) => (
                            <Button
                                key={country.code}
                                size={isMobile ? "$2" : "$3"}
                                backgroundColor={selectedCountry === country.code ? '#34C759' : 'transparent'}
                                borderWidth={1}
                                borderColor={selectedCountry === country.code ? '#34C759' : '$gray6'}
                                borderRadius="$4"
                                onPress={() => dispatch(setCountry(country.code))}
                                mb="$1"
                                pressStyle={{ scale: 0.96 }}
                            >
                                <Text 
                                    fontSize={isMobile ? "$2" : "$3"}
                                    color={selectedCountry === country.code ? '#fff' : '#6B7280'}
                                    fontWeight="600"
                                >
                                    {country.name}
                                </Text>
                            </Button>
                        ))}
                    </XStack>
                </YStack>
            </Card>

            {/* ü§ñ Pro –ò–ò –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç */}
            <Card
                backgroundColor="rgba(255, 149, 0, 0.05)"
                borderRadius="$6"
                padding={isMobile ? "$3" : "$4"}
                borderWidth={1}
                borderColor="rgba(255, 149, 0, 0.2)"
            >
                <YStack space="$3">
                    <XStack alignItems="center" space="$3">
                        <YStack
                            width={isMobile ? 40 : 48}
                            height={isMobile ? 40 : 48}
                            backgroundColor="rgba(255, 149, 0, 0.2)"
                            borderRadius="$4"
                            justifyContent="center"
                            alignItems="center"
                        >
                            <Ionicons name="medical" size={isMobile ? 20 : 24} color="#FF9500" />
                        </YStack>
                        <YStack flex={1}>
                            <Text fontSize={isMobile ? "$4" : "$5"} fontWeight="700" color="#FF9500">
                                –ò–ò –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç Pro
                            </Text>
                            <Text fontSize={isMobile ? "$2" : "$3"} color="#1C1C1E">
                                –ê–Ω–∞–ª–∏–∑ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π, –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –∏ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
                            </Text>
                        </YStack>
                        <Button
                            size={isMobile ? "$3" : "$4"}
                            backgroundColor="#FF9500"
                            borderRadius="$4"
                            onPress={() => setIsChatVisible(true)}
                            pressStyle={{ scale: 0.96 }}
                        >
                            <Ionicons name="chatbubble" size={isMobile ? 16 : 20} color="#fff" />
                        </Button>
                    </XStack>
                </YStack>
            </Card>
        </YStack>
    )

    return (
        <>
            <ScrollView backgroundColor="#fff">
                <YStack px={isMobile ? "$3" : "$4"} py={isMobile ? "$3" : "$4"} space="$4" backgroundColor="#fff">
                    {/* üìã –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ */}
                    <XStack space="$2" backgroundColor="$gray2" borderRadius="$4" padding="$1">
                        <Button
                            flex={1}
                            size={isMobile ? "$3" : "$4"}
                            backgroundColor={searchMode === 'basic' ? '#007AFF' : 'transparent'}
                            borderRadius="$3"
                            onPress={() => setSearchMode('basic')}
                            pressStyle={{ scale: 0.98 }}
                        >
                            <XStack alignItems="center" space="$2">
                                <Ionicons 
                                    name="search-outline" 
                                    size={isMobile ? 16 : 20} 
                                    color={searchMode === 'basic' ? '#fff' : '#6B7280'} 
                                />
                                <Text 
                                    fontSize={isMobile ? "$3" : "$4"} 
                                    color={searchMode === 'basic' ? '#fff' : '#6B7280'}
                                    fontWeight="600"
                                >
                                    –û–±—ã—á–Ω—ã–π –ø–æ–∏—Å–∫
                                </Text>
                            </XStack>
                        </Button>
                        <Button
                            flex={1}
                            size={isMobile ? "$3" : "$4"}
                            backgroundColor={searchMode === 'pro' ? '#007AFF' : 'transparent'}
                            borderRadius="$3"
                            onPress={() => setSearchMode('pro')}
                            pressStyle={{ scale: 0.98 }}
                        >
                            <XStack alignItems="center" space="$2">
                                <Ionicons 
                                    name="medical-outline" 
                                    size={isMobile ? 16 : 20} 
                                    color={searchMode === 'pro' ? '#fff' : '#6B7280'} 
                                />
                                <Text 
                                    fontSize={isMobile ? "$3" : "$4"} 
                                    color={searchMode === 'pro' ? '#fff' : '#6B7280'}
                                    fontWeight="600"
                                >
                                    Pro –¥–ª—è –≤—Ä–∞—á–µ–π
                                </Text>
                            </XStack>
                        </Button>
                    </XStack>

                    {/* –ö–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ */}
                    {searchMode === 'basic' ? renderBasicSearch() : renderProSearch()}

                    {/* ü§ñ AI-–ø–æ–¥—Å–∫–∞–∑–∫–∞ */}
                    {loadingTip ? (
                        <XStack alignItems="center" space="$2">
                            <Spinner size="small" color="$blue10" />
                            <Text color="$gray10" fontSize={isMobile ? "$3" : "$4"}>–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º...</Text>
                        </XStack>
                    ) : aiTip ? (
                        <Paragraph
                            fontSize={isMobile ? "$3" : "$4"}
                            bg={searchMode === 'pro' ? "rgba(255, 149, 0, 0.1)" : "#f2f4f7"}
                            px="$3"
                            py="$2"
                            br="$3"
                            color="#333"
                            borderColor={searchMode === 'pro' ? "rgba(255, 149, 0, 0.3)" : "#d0d5dd"}
                            borderWidth={1}
                        >
                            {aiTip}
                        </Paragraph>
                    ) : null}

                    {/* üíä –ö–∞—Ä—Ç–æ—á–∫–∏ */}
                    {filtered.length === 0 ? (
                        <YStack alignItems="center" py="$4">
                            <Text fontSize={isMobile ? "$3" : "$4"} color="$gray10" textAlign="center">
                                –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
                            </Text>
                            {query && (
                                <Text fontSize={isMobile ? "$2" : "$3"} color="$gray8" textAlign="center" mt="$1">
                                    {searchMode === 'pro' 
                                        ? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã'
                                        : '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞–Ω—É'
                                    }
                                </Text>
                            )}
                        </YStack>
                    ) : (
                        <YStack space={isMobile ? "$2" : "$3"}>
                            <XStack flexWrap="wrap" justifyContent="space-between">
                                {filtered.map((medicine) => (
                                    <YStack key={medicine.id} width="48%" mb={isMobile ? "$2" : "$3"}>
                                        <MedicineCard medicine={medicine} proMode={searchMode === 'pro'} />
                                    </YStack>
                                ))}
                            </XStack>
                        </YStack>
                    )}
                </YStack>
            </ScrollView>
            
            {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —á–∞—Ç–∞ */}
            <AIChatModal 
                visible={isChatVisible}
                onClose={() => setIsChatVisible(false)}
                proMode={searchMode === 'pro'}
            />
        </>
    )
}